// Generated by view binder compiler. Do not edit!
package de.juliaaan2502.wearbrowsing.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.EditText;
import android.widget.ImageButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import de.juliaaan2502.wearbrowsing.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton homeUrl;

  @NonNull
  public final EditText searchText;

  @NonNull
  public final ImageButton searchUrl;

  @NonNull
  public final ImageButton settingsPage;

  @NonNull
  public final WebView webView;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull ImageButton homeUrl,
      @NonNull EditText searchText, @NonNull ImageButton searchUrl,
      @NonNull ImageButton settingsPage, @NonNull WebView webView) {
    this.rootView = rootView;
    this.homeUrl = homeUrl;
    this.searchText = searchText;
    this.searchUrl = searchUrl;
    this.settingsPage = settingsPage;
    this.webView = webView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.homeUrl;
      ImageButton homeUrl = rootView.findViewById(id);
      if (homeUrl == null) {
        break missingId;
      }

      id = R.id.searchText;
      EditText searchText = rootView.findViewById(id);
      if (searchText == null) {
        break missingId;
      }

      id = R.id.searchUrl;
      ImageButton searchUrl = rootView.findViewById(id);
      if (searchUrl == null) {
        break missingId;
      }

      id = R.id.settingsPage;
      ImageButton settingsPage = rootView.findViewById(id);
      if (settingsPage == null) {
        break missingId;
      }

      id = R.id.webView;
      WebView webView = rootView.findViewById(id);
      if (webView == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, homeUrl, searchText, searchUrl,
          settingsPage, webView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
