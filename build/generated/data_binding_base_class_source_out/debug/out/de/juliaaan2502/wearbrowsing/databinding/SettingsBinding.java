// Generated by view binder compiler. Do not edit!
package de.juliaaan2502.wearbrowsing.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import de.juliaaan2502.wearbrowsing.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView appVersion;

  @NonNull
  public final TextView authorResource;

  @NonNull
  public final TextView authorResourceWho;

  @NonNull
  public final ImageButton exitButton;

  @NonNull
  public final TextView settingsTitle;

  @NonNull
  public final TextView versionResource;

  private SettingsBinding(@NonNull ConstraintLayout rootView, @NonNull TextView appVersion,
      @NonNull TextView authorResource, @NonNull TextView authorResourceWho,
      @NonNull ImageButton exitButton, @NonNull TextView settingsTitle,
      @NonNull TextView versionResource) {
    this.rootView = rootView;
    this.appVersion = appVersion;
    this.authorResource = authorResource;
    this.authorResourceWho = authorResourceWho;
    this.exitButton = exitButton;
    this.settingsTitle = settingsTitle;
    this.versionResource = versionResource;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appVersion;
      TextView appVersion = rootView.findViewById(id);
      if (appVersion == null) {
        break missingId;
      }

      id = R.id.authorResource;
      TextView authorResource = rootView.findViewById(id);
      if (authorResource == null) {
        break missingId;
      }

      id = R.id.authorResourceWho;
      TextView authorResourceWho = rootView.findViewById(id);
      if (authorResourceWho == null) {
        break missingId;
      }

      id = R.id.exitButton;
      ImageButton exitButton = rootView.findViewById(id);
      if (exitButton == null) {
        break missingId;
      }

      id = R.id.settingsTitle;
      TextView settingsTitle = rootView.findViewById(id);
      if (settingsTitle == null) {
        break missingId;
      }

      id = R.id.versionResource;
      TextView versionResource = rootView.findViewById(id);
      if (versionResource == null) {
        break missingId;
      }

      return new SettingsBinding((ConstraintLayout) rootView, appVersion, authorResource,
          authorResourceWho, exitButton, settingsTitle, versionResource);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
